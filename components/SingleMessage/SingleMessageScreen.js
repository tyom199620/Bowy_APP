import React, {Component} from 'react';import {    View,    Platform,    TextInput, StyleSheet, StatusBar, Dimensions, ScrollView, Image, Text, TouchableOpacity, createStackNavigator,    Modal, TouchableHighlight, Alert, SafeAreaView} from 'react-native';import {SingleMessageStyle} from './SingleMessageStyles';import * as ImagePicker from 'expo-image-picker';import {addCarStyle} from "../AddCar/AddCarStyles";import axios from 'axios';let WebSocketServer = require('websocket').server;export default class SingleMessage extends Component {    constructor(props) {        super(props);        this.state = {            userImage: '../../assets/img/face1.jpg',            userName: 'Дмитрий',            userPosition: 'Аренда авто, под залог',            price: '1290 ₽',            date: '28 мар. 2021г.',            userMessage1: "Привет как дела:??",            //  userMessage2: ["Супер ты как:??", 'привет'],            selectedImages: [],            messageText: '',            messageData: [],        }    }    handleGoChat = () => {        this.props.navigation.navigate('Chat')    };    openImagePickerAsync = async () => {        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();        if (permissionResult.granted === false) {            alert("Permission to access camera roll is required!");            return;        }        let pickerResult = await ImagePicker.launchImageLibraryAsync();        if (pickerResult.cancelled === true) {            return;        }        let {selectedImages} = this.state;        selectedImages.push(pickerResult.uri);        console.log(selectedImages);        this.setState({            selectedImages        })    };    handleRemoveCar = (uri) => {        let {selectedImages} = this.state;        selectedImages = selectedImages.filter(el => el !== uri);        this.setState({            selectedImages        })    };    renderPicketPhoto = () => {        let {selectedImages} = this.state;        if (selectedImages.length) {            return (                <ScrollView style={{}} horizontal={true}>                    {selectedImages.map(item => (                        <View style={{width: 100, height: 100, marginRight: 20}}>                            <TouchableOpacity style={addCarStyle.removeCarStyle} onPress={() => {                                this.handleRemoveCar(item)                            }}>                                <Image                                    style={{justifyContent: 'center'}}                                    source={require('../../assets/img/trashicon.png')}/>                            </TouchableOpacity>                            <Image source={{uri: item}} style={{                                width: 100,                                height: 100,                                borderWidth: 3,                                borderRadius: 10,                            }}                            />                        </View>                    ))}                </ScrollView>            );        }    };    handleChange = (value) => {        this.setState({messageText: value});    };    handleAddNewMessage = () => {        let {messageData} = this.state;        messageData.push({            id: 1,            text: this.state.messageText,            sendTime: new Date(),            userId: 1        });        this.setState({            messageData,            messageText: ''        })    };    handleRenderNewMessage = () => {        let {messageData} = this.state;        let {messageText} = this.state;        if (messageData.length) {            return (                <View>                    {messageData.map((item) => (                        <View>                            <Text style={SingleMessageStyle.newMessageStyle}>                                {item.text}                            </Text>                        </View>                    ))}                </View>            )        }    };    render() {        return (            <SafeAreaView style={SingleMessageStyle.view}>                <View style={{flexDirection: 'row',}}>                    <TouchableOpacity style={{width: 40, height: 40, marginTop: 40}} onPress={this.handleGoChat}>                        <Image style={SingleMessageStyle.backIcon} source={require('../../assets/img/gotoback.png')}/>                    </TouchableOpacity>                    <View>                        <View style={{flexDirection: 'row'}}>                            <TouchableOpacity>                                <Image source={require('../../assets/img/face1.jpg')}                                       style={{width: 100, height: 100, borderRadius: 50}}/>                            </TouchableOpacity>                            <View style={{marginTop: 20}}>                                <Text style={{marginBottom: 15, color: '#424A55'}}>{this.state.userName}</Text>                                <Text style={{                                    borderWidth: 2,                                    padding: 5,                                    borderRadius: 10,                                    borderColor: '#BABABA',                                    color: '#818B9B'                                }}>{this.state.userPosition} | {this.state.price}</Text>                            </View>                        </View>                    </View>                </View>                <View style={SingleMessageStyle.line}></View>                <View>                    <Text style={{color: '#9BB8AC'}}>{this.state.date}</Text>                </View>                <ScrollView style={{flex: 1, marginTop: 80, width: "80%"}}>                    <View style={{flex: 1, justifyContent: "flex-start", alignItems: 'center',}}>                        <View style={SingleMessageStyle.userMessage1}>                            <Text>{this.state.userMessage1}</Text>                        </View>                        <View style={SingleMessageStyle.userMessage2}>                            <Text>{this.handleRenderNewMessage()}</Text>                        </View>                    </View>                </ScrollView>                <View style={SingleMessageStyle.pickedPhotoStyle}>                    {this.renderPicketPhoto()}                </View>                <View style={SingleMessageStyle.line}></View>                <View style={{flexDirection: 'row', justifyContent: 'space-around', width: '90%'}}>                    <TouchableOpacity style={{marginTop: 10}} onPress={this.openImagePickerAsync}>                        <Image                            source={require('../../assets/img/sendFile.png')}                        />                    </TouchableOpacity>                    <View style={{flexDirection: 'row', backgroundColor: "#F0F4F8", marginBottom: 20}}>                        <View style={{width: '70%', justifyContent: 'space-between', padding: 10, borderRadius: 20}}>                            <TextInput                                style={{width: "100%", height: 30}}                                placeholder='Напишите...'                                onChangeText={this.handleChange}                                value={this.state.messageText}                            />                        </View>                        <TouchableOpacity style={{padding: 10, flex: 1}} onPress={this.handleAddNewMessage}>                            <Image                                source={require('../../assets/img/sendMessage.png')}                                style={{width: 30, height: 30, alignSelf: 'flex-end'}}                            />                        </TouchableOpacity>                    </View>                </View>            </SafeAreaView>        )    }}